.TH SACF 1 sacf-VERSION
.SH "NAME"
.PP
sacf - Simple Auto CPU Frequencer
.SH "SYNOPSIS"
.PP
\fBsacf\fP [ \fB-blrtTv\fP ] [ \fB-g\fP \fIgovernor\fP ]
.SH "DESCRIPTION"
.PP
\fBsacf\fP is a simple program that only changes two things: the \fBgovernor\fP and \fBturbo
boost\fP state; depending on the cpu load, system load and the temperature.
.br
Machines that have a battery and most of the time depend on it are the target,
but since it reduces the power consumption in general it can be beneficial, in
theory.
.br

.PP
\fBsacf\fP will run only if \fI/var/run/sacf.lock\fP doesn’t exist, created when run. This
is to avoid multiple instances of \fBsacf\fP run at the same time.
.br
The lock is \fBignored\fP if any cli option is used but \fI\-b\fP or \fI\-\-daemon\fP is used.
.br

.PP
Currently, supported platform is linux (no BSD’s).
.br

.PP
It requires root access in order to write to the pseudofilesystem \fC/sys\fP to change
the turbo boost and the kernel governor.
.SH "OPTIONS"
.PP
Without any arguments, sacf will run every \fBinterval\fP seconds forever.

.TP
\fB-b, --daemon\fP
Daemonize process, forks into the background.
.TP
\fB-g, --governor governor\fP
Sets \fBgovernor\fP to all cpus, then exit.
.TP
\fB-l, --list\fP
Print stats about the system, then exit (can be run without root).
.TP
\fB-r, --run-once\fP
Run once, then exit.
.TP
\fB-t, --enable-turbo\fP
Enables turbo boost for all cpus, then exit.
.TP
\fB-T, --disable-turbo\fP
Disables turbo boost for all cpus, then exit.
.TP
\fB-v, --version\fP
Print the version number and exit.
.SH "NOTES"
.PP
Some general tips about battery:
.IP \(dg 4
Using turbo boost will, most likely, fire up the fans on your machine, at least lightly in a constant use of it.
.IP \(dg 4
Overheating usually appears in machines that handle a big workload (usage), are using AC and have their CPUs running at the max. Using \fCsacf\fP, you could avoid this by setting the \fBacturbo\fP to \fBNever\fP, and setting the \fBacgovernor\fP to \fBpowersave\fP or the similar.
.SH "CONFIGURATION"
.PP
sacf is customized by creating a custom config.h and (re)compiling the source
code. This keeps it simple, since reading a config file isn’t that hard (but
adds unneeded complexity), and in many aspects more customizable. I try my best
to comment about the variables in config.h, since they don’t do anything crazy,
so it should be very straight foward what does what.
.SH "SEE ALSO"
.PP
tpl(1)
.SH "BUGS"
.PP
\fIhttps://github.com/explosion-mental/sacf\fP
.br
\fIhttps://codeberg.org/explosion-mental/sacf\fP
.br
